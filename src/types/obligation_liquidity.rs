//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use solana_pubkey::Pubkey;
use crate::generated::types::BigFractionBytes;
use borsh::BorshSerialize;
use borsh::BorshDeserialize;

/// Obligation liquidity state
#[derive(BorshSerialize, BorshDeserialize, Clone, Debug, Eq, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct ObligationLiquidity {
/// Reserve liquidity is borrowed from
#[cfg_attr(feature = "serde", serde(with = "serde_with::As::<serde_with::DisplayFromStr>"))]
pub borrow_reserve: Pubkey,
/// Borrow rate used for calculating interest (big scaled fraction)
pub cumulative_borrow_rate_bsf: BigFractionBytes,
pub padding: u64,
/// Amount of liquidity borrowed plus interest (scaled fraction)
pub borrowed_amount_sf: u128,
/// Liquidity market value in quote currency (scaled fraction)
pub market_value_sf: u128,
/// Risk adjusted liquidity market value in quote currency - DEBUG ONLY - use market_value instead
pub borrow_factor_adjusted_market_value_sf: u128,
/// Amount of liquidity borrowed outside of an elevation group
pub borrowed_amount_outside_elevation_groups: u64,
pub padding2: [u64; 7],
}


